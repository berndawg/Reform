<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Label="Globals">
    <SccProjectName>SAK</SccProjectName>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>Reform</PackageId>
    <Version>1.0</Version>
    <Authors>Bernie Seabrook</Authors>
    <Company>Bernie Seabrook</Company>
    <Product>Reform</Product>
    <Description>Reform is an ORM that's extremely easy to use and extend.  Stop writing SQL!  Use the IReform interface instead.  It includes methods like Count, Exists, Select, Insert, Update, Delete, Merge, and even BulkInsert.  Reform is fully customizable allowing it to be used even without SQL Server.  It puts the C# developer back in control of how data is shaped and manipulated.  Define POCOs, add Reform code attributes, and you're done.  It includes support for validation and transactions and it’s the perfect tool for ETL applications.  Forget all about Martin Fowler’s silly IRepository pattern.  Use IReform instead.  You’ll be glad you did.</Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <NeutralLanguage>en</NeutralLanguage>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <FileVersion>1.1.0.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Data.SqlClient" Version="4.8.6" />
    <PackageReference Include="Unity" Version="5.11.5" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>

</Project>
